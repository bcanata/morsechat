
  # #Soketi service
  # soketi:
  #   image: "quay.io/soketi/soketi:89604f268623cf799573178a7ba56b7491416bde-16-debian"
  #   ports:
  #     - "6001:6001"
  #     - "9601:9601"
  #   environment:
  #     DEBUG: 1
  #     DEFAULT_APP_ID: ${PUSHER_APP_ID}
  #     DEFAULT_APP_KEY: ${PUSHER_KEY}
  #     DEFAULT_APP_SECRET: ${PUSHER_SECRET}

  #   volumes:
  #     - ./soketi-config.json:/opt/soketi/soketi-config.json:ro
  #   command:
  #     - "--config=/opt/soketi/soketi-config.json"


# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: soketi
  namespace: morse
  labels:
    app: soketi
spec:
  selector:
    matchLabels:
      app: soketi
  replicas: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app: soketi
    spec:
      containers:
        - name: soketi
          image: quay.io/soketi/soketi:89604f268623cf799573178a7ba56b7491416bde-16-debian
          env:
            - name: DEBUG
              value: "1"
          args: ["--config=/opt/soketi/soketi-temp-config.json"]
          ports:
            - containerPort: 6001
          volumeMounts:
            - mountPath: /opt/soketi/
              name: soketi-temp-config
      volumes:
        - name: soketi-temp-config
          configMap: 
            name: soketi-temp-config
            items:
              - key: soketi-temp-config.json
                path: soketi-temp-config.json

---
# temporary config
apiVersion: v1
kind: ConfigMap
metadata:
  name: soketi-temp-config
data:
  soketi-temp-config.json: |
    {
    "debug": true,
    "port": 6001,
    "appManager.array.apps": [
        {
            "id": "123456",
            "key": "tomanage-key",
            "secret": "tomanage-secret",
            "webhooks": [
            ]
        }
    ]
    }


---
# Service
apiVersion: v1
kind: Service
metadata:
  name: soketi
  namespace: morse
spec:
  selector:
    app:  soketi

  type: ClusterIP
  ports:
    - name: http
      port: 6001
      targetPort: 6001

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: soketi
  namespace: morse
  annotations:
    # (Optional): Annotations for the Ingress Controller
    # Middleware:
    # WARNING: the name of the middleware is namespace-name@kubernetescrd
    #          so we are forced to hardcode the namespace. The traefik crd makes this easier
    #traefik.ingress.kubernetes.io/router.middlewares: morse-soketi-redirectscheme@kubernetescrd, morse-ssl-header@kubernetescrd
spec:
  rules:
  - host: "soketi.halb.it"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: soketi
            port:
              number: 6001
  tls:
  - hosts:
    - "soketi.halb.it"
    secretName: morse-cert  #name of the tls secret. Make sure this is defined first

---

# Redirect to https
# https://stackoverflow.com/questions/68575472/k3s-redirect-http-to-https
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: soketi-redirectscheme
  namespace: morse
spec:
  redirectScheme:
    scheme: wss
    permanent: true

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: ssl-header
  namespace: morse
spec:
  headers:
    customRequestHeaders:
      Connection: keep-alive, Upgrade
      Upgrade: WebSocket
